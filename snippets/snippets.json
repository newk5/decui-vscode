{
    "scope": "source.squirrel",
    "completions": {
        "Console.Print": {
            "prefix": "cp",
            "body": [
                "Console.Print(${1});"
            ],
            "description": "Prints to the chat"
        },
        "GUI.GetScreenSize()": {
            "prefix": "GUI.",
            "body": [
                "GUI.GetScreenSize()${1}"
            ],
            "description": "Returns the player screen size (VectorScreen)"
        },
        "GUI.GetMousePos()": {
            "prefix": "GUI.",
            "body": [
                "GUI.GetMousePos()${1}"
            ],
            "description": "Returns the coordinates of the player mouse position (VectorScreen)"
        },
        "Vector": {
            "prefix": "vec",
            "body": [
                "Vector(${1}, ${2}, ${3})"
            ],
            "description": "Creates a new Vector"
        },
        "Colour": {
            "prefix": "col",
            "body": [
                "Colour(${1}, ${2}, ${3}, ${4:255})"
            ],
            "description": "Creates a new Colour"
        },
        "VectorScreen": {
            "prefix": "vs",
            "body": [
                "VectorScreen(${1}, ${2})"
            ],
            "description": "Creates a new VectorScreen"
        },
        "GUIProgressBar": {
            "prefix": "prog",
            "body": [
                "UI.ProgressBar({",
                "$0 $0 $0 $0 id = \"${1:progBarID}\"  ",
                "})"
            ],
            "description": "Creates a new GUIProgressBar"
        },
        "UI.ProgressBar": {
            "prefix": "UI",
            "body": [
                "UI.ProgressBar({",
                "$0 $0 $0 $0 id = \"${1:progBarID}\"  ",
                "$0 $0 $0 $0 align =\"top_center\"  ",
                "$0 $0 $0 $0 Size = VectorScreen(200,30)  ",
                "$0 $0 $0 $0 StartColour = Colour(111,30,0)  ",
                "$0 $0 $0 $0 EndColour  = Colour( 180, 110, 110 )  ",
                "$0 $0 $0 $0 Value  =50  ",
                "$0 $0 $0 $0 Thickness = 2  ",
                "})"
            ],
            "description": "Creates a new GUIProgressBar"
        },
        "GUIScrollbar.": {
            "prefix": "fscroll",
            "body": [
                "UI.Scrollbar(\"${1:scrollBarID}\")"
            ],
            "description": "Fetches an existing GUIScrollbar with the corresponding scrollBarID"
        },
        "UI.Scrollbar": {
            "prefix": "UI",
            "body": [
                "UI.Scrollbar({",
                    "$0 $0 $0 $0 id = \"${1:scrollBarID}\"  ",
                    "})"
            ],
            "description": "Fetches an existing GUIScrollbar with the corresponding scrollBarID"
        },
        "GUIScrollbar": {
            "prefix": "scroll",
            "body": [
                "UI.Scrollbar({",
                "$0 $0 $0 $0 id = \"${1:scrollBarID}\"  ",
                "})"
            ],
            "description": "Creates a new GUIScrollbar"
        },
        "GUIProgressBar.": {
            "prefix": "fprog",
            "body": [
                "UI.ProgressBar(\"${1:progBarID}\")"
            ],
            "description": "Fetches an existing GUIProgressBar with the corresponding progBarID"
        },
        "GUILabel": {
            "prefix": "lbl",
            "body": [
                "UI.Label({",
                "$0 $0 $0 $0 id = \"${1:newLabelID}\"  ",
                "$0 $0 $0 $0 Text = \"${2:labelText}\" ",
                "})"
            ],
            "description": "Creates a new GUILabel"
        },
        "UI.Label": {
            "prefix": "UI",
            "body": [
                "UI.Label({",
                "$0 $0 $0 $0 id = \"${1:newLabelID}\"  ",
                "$0 $0 $0 $0 Text = \"${2:labelText}\" ",
                "})"
            ],
            "description": "Creates a new GUILabel"
        },
        "GUILabel.": {
            "prefix": "flbl",
            "body": [
                "UI.Label(\"${1:LabelID}\")"
            ],
            "description": "Fetches an existing GUILabel with the corresponding LabelID"
        },
        "GUIBtn": {
            "prefix": "btn",
            "body": [
                "UI.Button({",
                "$0 $0 $0 $0 id = \"${1:newButtonID}\"  ",
                "$0 $0 $0 $0 Text = \"${2:buttonText}\" ",
                "$0 $0 $0 $0 onClick = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0 ",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Creates a new GUIButton"
        },
        "UI.Button": {
            "prefix": "UI",
            "body": [
                "UI.Button({",
                    "$0 $0 $0 $0 id = \"${1:newButtonID}\"  ",
                    "$0 $0 $0 $0 Text = \"${2:buttonText}\" ",
                    "$0 $0 $0 $0 onClick = function() {",
                    "$0 $0 $0 $0 $0 $0 $0 $0 ",
                    "$0 $0 $0 $0 }",
                    "})"
            ],
            "description": "Creates a new GUIButton"
        },
        "GUIBtn.": {
            "prefix": "fbtn",
            "body": [
                "UI.Button(\"${1:ButtonID}\")"
            ],
            "description": "Fetches an existing GUIButton with the corresponding ButtonID"
        },
        "GUICanvas": {
            "prefix": "canv",
            "body": [
                "UI.Canvas({",
                "$0 $0 $0 $0 id = \"${1:newCanvasID}\"  ",
                "$0 $0 $0 $0 $0 $0 $0 $0 ",
                "})"
            ],
            "description": "Creates a new GUICanvas"
        },
        "UI.Canvas": {
            "prefix": "UI",
            "body": [
                "UI.Canvas({",
                    "$0 $0 $0 $0 id = \"${1:newCanvasID}\"  ",
                    "$0 $0 $0 $0 $0 $0 $0 $0 ",
                    "})"
            ],
            "description": "Creates a new GUICanvas"
        },
        "GUICanvas.": {
            "prefix": "fcanv",
            "body": [
                "UI.Canvas(\"${1:CanvasID}\")"
            ],
            "description": "Fetches an existing GUICanvas with the corresponding CanvasID"
        },
        "UI.Sprite": {
            "prefix": "UI",
            "body": [
                "UI.Sprite({",
                    "$0 $0 $0 $0 id = \"${1:newSpriteID}\"  ",
                    "$0 $0 $0 $0 file = \"${2:image.png}\" ",
                    "$0 $0 $0 $0 $0 $0 $0 $0 ",
                    "})"
            ],
            "description": "Creates a new GUISprite"
        },
        "GUISprite": {
            "prefix": "spr",
            "body": [
                "UI.Sprite({",
                "$0 $0 $0 $0 id = \"${1:newSpriteID}\"  ",
                "$0 $0 $0 $0 file = \"${2:image.png}\" ",
                "$0 $0 $0 $0 $0 $0 $0 $0 ",
                "})"
            ],
            "description": "Creates a new GUISprite"
        },
        "GUISprite.": {
            "prefix": "fspr",
            "body": [
                "UI.Sprite(\"${1:SpriteID}\")"
            ],
            "description": "Fetches an existing GUISprite with the corresponding SpriteID"
        },
        "UI.DataTable": {
            "prefix": "UI",
            "body": [
                "UI.DataTable({",
                    "$0 $0 $0 $0 id = \"${1:newTableID}\"  ",
                    "$0 $0 $0 $0 rows = ${2:10} ",
                    "$0 $0 $0 $0 columns = [ ",
                    "$0 $0 $0 $0 $0 $0 $0 $0 { header = \"Column1\", field = \"col1\"},",
                    "$0 $0 $0 $0 $0 $0 $0 $0 { header = \"Column2\", field = \"col2\"},",
                    "$0 $0 $0 $0 ]",
                    "$0 $0 $0 $0 data = [ ]",
                    "})"
            ],
            "description": "Creates a new Datatable"
        },
        "DataTable": {
            "prefix": "tbl",
            "body": [
                "UI.DataTable({",
                "$0 $0 $0 $0 id = \"${1:newTableID}\"  ",
                "$0 $0 $0 $0 rows = ${2:10} ",
                "$0 $0 $0 $0 columns = [ ",
                "$0 $0 $0 $0 $0 $0 $0 $0 { header = \"Column1\", field = \"col1\"},",
                "$0 $0 $0 $0 $0 $0 $0 $0 { header = \"Column2\", field = \"col2\"},",
                "$0 $0 $0 $0 ]",
                "$0 $0 $0 $0 data = [ ]",
                "})"
            ],
            "description": "Creates a new Datatable"
        },
        "DataTable.": {
            "prefix": "ftbl",
            "body": [
                "UI.DataTable(\"${1:TableID}\")"
            ],
            "description": "Fetches an existing DataTable with the corresponding TableID"
        },
        "UI.Listbox": {
            "prefix": "UI",
            "body": [
                "UI.Listbox({",
                    "$0 $0 $0 $0 id = \"${1:lstBox}\"  ",
                    "$0 $0 $0 $0 Size = VectorScreen(100,80)",
                    "$0 $0 $0 $0 options = [\"option1\", \"option2\"] ",
                    "$0 $0 $0 $0 onOptionSelect = function(option) {",
                    "$0 $0 $0 $0 $0 $0 $0 $0 Console.Print(option)",
                    "$0 $0 $0 $0 }",
                    "})"
            ],
            "description": "Creates a new GUIListbox"
        },
        "GUIListbox": {
            "prefix": "lst",
            "body": [
                "UI.Listbox({",
                "$0 $0 $0 $0 id = \"${1:lstBox}\"  ",
                "$0 $0 $0 $0 Size = VectorScreen(100,80)",
                "$0 $0 $0 $0 options = [\"option1\", \"option2\"] ",
                "$0 $0 $0 $0 onOptionSelect = function(option) {",
                "$0 $0 $0 $0 $0 $0 $0 $0 Console.Print(option)",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Creates a new GUIListbox"
        },
        "GUIListbox.": {
            "prefix": "flst",
            "body": [
                "UI.Listbox(\"${1:lstBoxID}\")"
            ],
            "description": "Fetches an existing GUIListbox with the corresponding id "
        },
        "GUIWindow.": {
            "prefix": "window",
            "body": [
                "UI.Window({",
                "$0 $0 $0 $0 id = \"${1:windowID}\"  ",
                "$0 $0 $0 $0 Size = VectorScreen(300,400)",
                "})"
            ],
            "description": "Creates a new GUIWindow"
        },
        "UI.Window": {
            "prefix": "UI",
            "body": [
                "UI.Window({",
                    "$0 $0 $0 $0 id = \"${1:windowID}\"  ",
                    "$0 $0 $0 $0 Size = VectorScreen(300,400)",
                    "})"
            ],
            "description": "Creates a new GUIWindow"
        },
        "GUIWindow": {
            "prefix": "fwindow",
            "body": [
                "UI.Window(\"${1:windowID}\")"
            ],
            "description": "Fetches an existing GUIWindow with the corresponding windowID"
        },
        "UI.Memobox": {
            "prefix": "UI",
            "body": [
                "UI.Memobox({",
                    "$0 $0 $0 $0 id = \"${1:memoboxID}\"  ",
                    "$0 $0 $0 $0 Size = VectorScreen(300,400)",
                    "})"
            ],
            "description": "Creates a new GUIMemobox"
        },
        "GUIMemobox": {
            "prefix": "memo",
            "body": [
                "UI.Memobox({",
                "$0 $0 $0 $0 id = \"${1:memoboxID}\"  ",
                "$0 $0 $0 $0 Size = VectorScreen(300,400)",
                "})"
            ],
            "description": "Creates a new GUIMemobox"
        },
        "GUIMemobox.": {
            "prefix": "fmemo",
            "body": [
                "UI.Memobox(\"${1:memoboxID}\")"
            ],
            "description": "Fetches an existing GUIMemobox with the corresponding memoboxID"
        },
        "GUIEditbox.": {
            "prefix": "fedt",
            "body": [
                "UI.Editbox(\"${1:editBoxID}\")"
            ],
            "description": "Fetches an existing GUIEditbox with the corresponding editBoxID"
        },
        "UI.Editbox": {
            "prefix": "UI",
            "body": [
                "UI.Editbox({",
                    "$0 $0 $0 $0 id = \"${1:editBoxID}\"  ",
                    "$0 $0 $0 $0 Size = VectorScreen(100,80)",
                    "})"
            ],
            "description": "Creates a new GUIEditbox"
        },
        "GUIEditbox": {
            "prefix": "edt",
            "body": [
                "UI.Editbox({",
                "$0 $0 $0 $0 id = \"${1:editBoxID}\"  ",
                "$0 $0 $0 $0 Size = VectorScreen(100,80)",
                "})"
            ],
            "description": "Creates a new GUIEditbox"
        },
        "GUICheckbox": {
            "prefix": "chk",
            "body": [
                "UI.Checkbox({",
                "$0 $0 $0 $0 id = \"${1:checkboxID}\"  ",
                "})"
            ],
            "description": "Creates a new GUICheckbox"
        },
        "UI.Checkbox": {
            "prefix": "UI",
            "body": [
                "UI.Checkbox({",
                    "$0 $0 $0 $0 id = \"${1:checkboxID}\"  ",
                    "})"
            ],
            "description": "Creates a new GUICheckbox"
        },
        "GUICheckbox.": {
            "prefix": "fchk",
            "body": [
                "UI.Checkbox(\"${1:checkboxID}\")"
            ],
            "description": "Fetches an existing GUICheckbox with the corresponding checkboxID"
        },
        "Popup.": {
            "prefix": "fpop",
            "body": [
                "UI.Popup(\"${1:popupID}\")"
            ],
            "description": "Fetches an existing Popup with the corresponding popupID"
        },
        "Popup": {
            "prefix": "pop",
            "body": [
                "UI.Popup({",
                "$0 $0 $0 $0 id = \"${1:popupID}\"  ",
                "$0 $0 $0 $0 onYes = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0",
                "$0 $0 $0 $0 },",
                "$0 $0 $0 $0 onNo = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0",
                "$0 $0 $0 $0 },",
                "$0 $0 $0 $0 onClose = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Creates a new popup"
        },
        "UI.Popup": {
            "prefix": "UI",
            "body": [
                "UI.Popup({",
                "$0 $0 $0 $0 id = \"${1:popupID}\"  ",
                "$0 $0 $0 $0 onYes = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0",
                "$0 $0 $0 $0 },",
                "$0 $0 $0 $0 onNo = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0",
                "$0 $0 $0 $0 },",
                "$0 $0 $0 $0 onClose = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Creates a new popup"
        },
        "ComboBox": {
            "prefix": "combo",
            "body": [
                "UI.ComboBox({",
                "$0 $0 $0 $0 id = \"${1:comboBoxID}\"  ",
                "$0 $0 $0 $0 Size = 150",
                "$0 $0 $0 $0 options = [\"option1\", \"option2\"] ",
                "$0 $0 $0 $0 onOptionSelect = function(option) {",
                "$0 $0 $0 $0 $0 $0 $0 $0 Console.Print(option)",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Creates a new ComboBox"
        },
        "UI.ComboBox": {
            "prefix": "UI",
            "body": [
                "UI.ComboBox({",
                "$0 $0 $0 $0 id = \"${1:comboBoxID}\"  ",
                "$0 $0 $0 $0 Size = 150",
                "$0 $0 $0 $0 options = [\"option1\", \"option2\"] ",
                "$0 $0 $0 $0 onOptionSelect = function(option) {",
                "$0 $0 $0 $0 $0 $0 $0 $0 Console.Print(option)",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Creates a new ComboBox"
        },
        "ComboBox.": {
            "prefix": "fcombo",
            "body": [
                "UI.ComboBox(\"${1:comboBoxID}\")"
            ],
            "description": "Fetches an existing ComboBox with the corresponding comboBoxID"
        },
        "Tabview.": {
            "prefix": "ftabs",
            "body": [
                "UI.TabView(\"${1:TabViewID}\")"
            ],
            "description": "Fetches an existing TabView with the corresponding TabViewID"
        },
        "Tabview": {
            "prefix": "tabs",
            "body": [
                "UI.TabView({",
                "$0 $0 $0 $0 id = \"${1:newTabviewID}\"  ",
                "$0 $0 $0 $0 size = VectorScreen(400,300)",
                "$0 $0 $0 $0 onTabClicked = function(t) {",
                "$0 $0 $0 $0 $0 $0 $0 $0 Console.Print(t +\" tab clicked\")",
                "$0 $0 $0 $0 }",
                "$0 $0 $0 $0 tabs = [ ",
                "$0 $0 $0 $0 $0 $0 $0 $0 { ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 title = \"tab1\" ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 content = [ ] ",
                "$0 $0 $0 $0 $0 $0 $0 $0 }, ",
                "$0 $0 $0 $0 $0 $0 $0 $0 { ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 title = \"tab2\" ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 content = [ ] ",
                "$0 $0 $0 $0 $0 $0 $0 $0 } ",
                "$0 $0 $0 $0 ]",
                "})"
            ],
            "description": "Creates a new tabview"
        },
        "UI.Tabview": {
            "prefix": "UI",
            "body": [
                "UI.TabView({",
                "$0 $0 $0 $0 id = \"${1:newTabviewID}\"  ",
                "$0 $0 $0 $0 size = VectorScreen(400,300)",
                "$0 $0 $0 $0 onTabClicked = function(t) {",
                "$0 $0 $0 $0 $0 $0 $0 $0 Console.Print(t +\" tab clicked\")",
                "$0 $0 $0 $0 }",
                "$0 $0 $0 $0 tabs = [ ",
                "$0 $0 $0 $0 $0 $0 $0 $0 { ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 title = \"tab1\" ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 content = [ ] ",
                "$0 $0 $0 $0 $0 $0 $0 $0 }, ",
                "$0 $0 $0 $0 $0 $0 $0 $0 { ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 title = \"tab2\" ",
                "$0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 content = [ ] ",
                "$0 $0 $0 $0 $0 $0 $0 $0 } ",
                "$0 $0 $0 $0 ]",
                "})"
            ],
            "description": "Creates a new tabview"
        },
        "KeyBind": {
            "prefix": "kb",
            "body": [
                "UI.registerKeyBind({",
                "$0 $0 $0 $0 name = \"${1:keyName}\"  ",
                "$0 $0 $0 $0 kp= KeyBind(0x${2})",
                "$0 $0 $0 $0 onKeyUp = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0 ",
                "$0 $0 $0 $0 }",
                "$0 $0 $0 $0 onKeyDown = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0 ",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Registers a new KeyBind"
        },
        "UI.KeyBind": {
            "prefix": "UI",
            "body": [
                "UI.registerKeyBind({",
                "$0 $0 $0 $0 name = \"${1:keyName}\"  ",
                "$0 $0 $0 $0 kp= KeyBind(0x${2})",
                "$0 $0 $0 $0 onKeyUp = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0 ",
                "$0 $0 $0 $0 }",
                "$0 $0 $0 $0 onKeyDown = function() {",
                "$0 $0 $0 $0 $0 $0 $0 $0 ",
                "$0 $0 $0 $0 }",
                "})"
            ],
            "description": "Registers a new KeyBind"
        }
      
    }
}
